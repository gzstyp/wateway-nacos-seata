server:
  port: 9000
#spring.cloud.nacos.config.server-addr=127.0.0.1:8848 //在 bootstrap.properties|bootstrap.yml 中配置 Nacos server 的地址和应用名
#spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848 //在 application.properties|application.yml 中配置 Nacos server 的地址
spring:
  application:
    name: gateway
  cloud:
    #使用 Nacos 作为服务注册发现
    nacos:
      discovery:
        server-addr: 192.168.3.66:8848 #注意这个的discovery和bootstrap.yml的config!!!两个都要同时配置
        enabled: true
    #路由网关配置
    gateway:
      #自动转发服务名;设置与服务注册发现组件结合,这样可以采用服务名的路由策略
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      globalcors:
        cors-configurations:
          '[/**]':
            allow-credentials: true #允许携带认证信息
            allowed-origins:
              - "http://192.168.3.108"
              - "http://api.fwtai.com"
              - "https://api.fwtai.com"
            allowed-headers: "*"
            allowed-methods:
              - GET
              - POST
              - OPTIONS
            max-age: 7200
      #配置路由规则
      routes:
        # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
        - id: consumer
          # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
          uri: lb://consumer
          # Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法
          predicates:
            # Method 方法谓词，这里是匹配 GET 和 POST 请求
            - Method=GET,POST
        - id: provider
          uri: lb://provider
          predicates:
            - Method=GET,POST
#目前是无效!
management:
  endpoints:
    web:
      exposure:
        include: "*"

#目前是无效!
feign:
  sentinel:
    enabled: true

#配置日志级别，方别调试
logging:
  level:
    org.springframework.cloud.gateway: debug