server:
  port: 9092
#spring.cloud.nacos.config.server-addr=127.0.0.1:8848 //在 bootstrap.properties|bootstrap.yml 中配置 Nacos server 的地址和应用名
#spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848 //在 application.properties|application.yml 中配置 Nacos server 的地址
spring:
  application:
    name: nacos-consumer-feign
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.3.66:8848 #注意这个的discovery和bootstrap.yml的config!!!两个都要同时配置
        enabled: true
#    sentinel: #如果不使用路由网关zuul或spring cloud gateway 的话可以单独配置也可以的
#      transport:
#        port: 8721 #端口配置会在应用对应的机器上启动一个 Http Server,该 Server 会与 Sentinel 控制台做交互,有限流规则才能push到sentienl服务端(需要触发限流才能推送到sentienl服务端,比如手动 http://localhost:9092/test/hi )。比如 Sentinel 控制台添加了 1 个限流规则，会把规则数据 push 给这个 Http Server 接收，Http Server 再将规则注册到 Sentinel 中
#        dashboard: 192.168.3.66:9848 #指定Sentinel独立的服务器端,若没有则可以不配置此项!!!
#      enabled: true
management:
  endpoints:
    web:
      exposure:
        include: "*"
feign:
  sentinel:
    enabled: true #Feign 中使用 Sentinel，Sentinel 适配了 Feign 组件,但默认是关闭的。需要在配置文件中配置打开它启用它,并在 Service 中@FeignClient注解增加 fallback属性用来指定类